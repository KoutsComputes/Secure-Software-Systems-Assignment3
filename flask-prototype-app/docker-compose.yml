services:
  web:
    build: .
    ports:
      - "5000:5000"
    volumes:
      - ./:/app
    environment:
      - FLASK_DEBUG=1
      - FLASK_APP=app.app:app
      - DATABASE_URL=mysql+pymysql://user:password@db/flask_db
      # - ALLOWED_COUNTRIES=AU
      - AUDIT_LOG_PATH=/app/logs/audit.log
      - AUDIT_LOG_KEY=jamesbond123
    # Theo: Incident Recovery - ensure container auto-restarts and waits for healthy DB
    restart: always
    healthcheck:
      # Theo: Use Python stdlib to avoid adding curl/wget to image
      test: ["CMD-SHELL", "python -c \"import urllib.request,sys; sys.exit(0) if urllib.request.urlopen('http://localhost:5000/healthz').getcode()==200 else sys.exit(1)\" "]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mysql:5.7
    restart: always
    command: --server-id=1 --log-bin=mysql-bin --binlog_format=ROW --binlog_do_db=flask_db
    environment:
      MYSQL_DATABASE: flask_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql/init-master.sql:/docker-entrypoint-initdb.d/init-master.sql:ro
    # Theo: Incident Recovery - DB healthcheck enables ordered startup + restart on failure
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD --silent"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  db_replica:
    image: mysql:5.7
    restart: always
    command: --server-id=2 --relay-log=mysqld-relay-bin --read_only=1 --binlog_do_db=flask_db
    environment:
      MYSQL_DATABASE: flask_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "3307:3306"
    depends_on:
      # Theo: Start replica only after master DB is healthy
      db:
        condition: service_healthy
    volumes:
      - db_replica_data:/var/lib/mysql
    # Theo: Incident Recovery - replica healthcheck for orchestration
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD --silent"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

volumes:
  db_data:
  db_replica_data:
