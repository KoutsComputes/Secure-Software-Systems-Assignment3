| **Security Requirement**         | **Potential Security Solutions**                                         | **Pros**                                                                      | **Cons**                                                               | **Selected Solution**                 
| -------------------------------- | ------------------------------------------------------------------------ | ----------------------------------------------------------------------------- | ---------------------------------------------------------------------- | ------------------------------------- 
| **1. Voter Confidentiality**     | AES encryption; Plain DB with strict access; TLS-only                    | AES strong and docker friendly; DB access simple; TLS easy                    | DB-only weak; TLS doesn’t protect at rest                              | AES encryption                        
| **2. Vote Integrity**            | TLS/HTTPS; SHA256 hash of votes; DB write-protection                     | TLS protects transit; Hash detects tampering; DB write-protect prevents edits | TLS alone insufficient; Hash needs storage; Write-protect not flexible | TLS                                   
| **3. Availability (DDoS)**       | Nginx rate limiting; Fail2ban; Firewall rules                            | Nginx lightweight; Fail2ban blocks IPs; Firewall network-level                | Fail2ban slower in Docker; Firewall harder inside containers           | **Nginx rate limiting** + MULTIPLE DOCKER           
| **4. Non-Repudiation**           | JWT tokens; Signed receipts; Email confirmations                         | JWT lightweight; Receipts easy for users; Emails familiar                     | Receipts less secure; Emails may leak                                  | JSON Web Tokens                      
| **5. Incident Recovery**         | Docker auto-restart; Cron backups; Manual snapshots                      | Auto-restart instant; Cron simple; Manual snapshots flexible                  | Manual error-prone; Backups need space                                 | **Docker status + automatically make docker up and link parts of application + auto-restart + cron backup**         - DO NOT USE MULTIPLE SOLUTIONS  JUST ONE SOLID SOLUTION
| **6. Voter Authentication**      | Username/password; Password + MFA code; OAuth via Google                 | Password easiest; MFA adds extra security; OAuth user-friendly                | Password weak; OAuth adds dependency                                   | **Password + MFA**                    
| **7. RBAC (Frontend)**           | Hide UI buttons; Separate dashboards; Hardcoded role menus               | Hiding simple; Separate dashboards cleaner; Hardcoding quick                  | Hardcoding inflexible; Hiding alone weak                               | **Separate dashboards  - NO JWT TOKEN REPEAT      - THINK OF SOMETHING OTHER THAN JWT    
| **8. RBAC (Backend)**            | API role check middleware; Separate DBs per role; Reverse proxy by role  | Middleware standard; Separate DBs strong; Proxy hides APIs                    | DB separation complex; Proxy config heavy                              | ROLE IN API AND IN DATABASE (two seperate rewuirements) **Middleware role checks**            
| **9. MAINTAIN Logging**          | Append-only log; Remote syslog; Database audit table                     | Append-only easy; Remote logs harder to tamper; Audit table searchable        | Remote requires extra server; Audit table can be edited                | **Append-only logs**           - THINK OF SOMETHING ELSE BECAUSE LOGS ARE APPEND ONLY BY DEFAULT
| **10. Vote Verifiability**       | Receipt number; Email receipt; Public hash list                          | Receipt private; Email easy; Public hash transparent                          | Emails risky; Public hash may leak metadata                            | **Receipt number: instead of sha-256, location, time, other details, construct a formula for the function                  
| **11. Automatic Backups**        |   32741647317871327                          | Cron very easy; Rsync simple; Cloud resilient                                 | Cloud adds cost; Rsync manual setup                                    | **MASTER-SLAVE INSTANCES**   
| **12. Geolocation Restrictions** | Nginx GeoIP; Firewall geo-block; VPN whitelist                           | GeoIP config simple; Firewall broader; VPN whitelist very strict              | VPN whitelist not user-friendly                                        | **Nginx GeoIP**   - NOT USE NGINX TOO MANY TIMES AND  THINK OF SOME OTHER SOLUTION                 
| **13. API Rate Limiting**        | Nginx limit_req; Redis rate counter; API middleware throttle             | Nginx built-in; Redis accurate; Middleware per-user                           | Redis = extra container; Middleware heavy                              | **Nginx limit_req**                   - NOT USE NGINX TOO MANY TIMES AND  THINK OF SOME OTHER SOLUTION  
| **14. Caching Common Data**      | Static HTML files; Redis cache; CDN (Cloudflare)                         | Static files trivial; Redis fast; CDN offloads traffic                        | Redis extra setup; CDN external dependency                             | **Static files**  +  COOKIES OR REQ PARAMETERS                   
| **15. Session Recovery**         | Browser localStorage; Redis session store; Encrypted cookies             | LocalStorage easiest; Redis central; Cookies portable                         | LocalStorage limited; Redis adds container                             | **LocalStorage**                     
| **17. Saved Backups**            | Local storage; Cloud sync; Hybrid                                        | Local simple; Cloud secure; Hybrid balanced                                   | Local risky; Cloud costs; Hybrid extra work                            | **Hybrid (local + weekly cloud)**    
| **18. Minimal Downtime**         | Single container restart; Docker swarm (2 nodes); Nginx load balance     | Restart trivial; Swarm scalable; Nginx easy 2-container                       | Swarm complex; Single restart downtime risk                            | **Nginx load balance (2 containers)** - NOT USE NGINX TOO MANY TIMES AND  THINK OF SOME OTHER SOLUTION  
| **19. HTTPS/TLS**                | Let’s Encrypt auto; Self-signed cert; Paid cert                          | Let’s Encrypt free + trusted; Self-signed fast; Paid very secure              | Self-signed not trusted; Paid costly                                   | **Let’s Encrypt**                    

16. SQL INJECTION ATTACK ON INPUT VALIDATION
20. SQL INJECTION ATTACK URLS
